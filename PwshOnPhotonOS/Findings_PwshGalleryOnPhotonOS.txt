# Deploying Powershellgallery modules on VMware Photon OS isn't actually possible out-of-the-box.
#
# Deploy Powershell on Photon OS: tdnf -y install powershell 
# As on September 2019 the latest built-in installable powershell release is 6.1.0-271.
#
# See https://docs.microsoft.com/en-us/powershell/scripting/powershell-support-lifecycle?view=powershell-7#lifecycle-of-powershell-core
#     PowerShell releases end-of-life Version 6.1 End-of-life September 28, 2019
#
#
# This document stores the findings about prerequisites for Powershellgallery support on VMware Photon OS.
#
#
# Prerequisites:
#    VMware Photon OS 3.0
#
# 
# Workflow:
# ---------
# 1) Install Prerequisites
# 2) Build Powershell to run Powershellgallery
# 3) Run Pwsh\get-PSRepository
# 4) Result description
#
#
#
# Findings:
# ---------
#
# Finding #1
# 1) Vanilla VMware Photon OS 3.0 GA
# 2) Run all docker inside commands of https://github.com/vmware/powerclicore/blob/master/Dockerfile until get-PSRepository
# 3) Get-PSRepository fails with
#    WARNING: Unable to find module repositories.
#
#
#    Stacktrace of 2)
#    root@photonos [ / ]# tdnf install -y powershell unzip
#    Refreshing metadata for: 'VMware Photon Linux 3.0(x86_64) Updates'
#    Refreshing metadata for: 'VMware Photon Extras 3.0(x86_64)'
#    Refreshing metadata for: 'VMware Photon Linux 3.0(x86_64)'
#    photon                                 2549558    100%
#    Installing:
#    userspace-rcu                        x86_64             0.10.1-1.ph3             photon             638.89k 654221
#    libunwind                            x86_64             1.2-2.ph3                photon             168.59k 172632
#    lttng-ust                            x86_64             2.10.2-2.ph3             photon               1.11M 1161968
#    icu                                  x86_64             61.1-1.ph3               photon              31.02M 32523835
#    dotnet-runtime                       x86_64             2.2.0-1.ph3              photon              66.61M 69841358
#    unzip                                x86_64             6.0-13.ph3               photon-updates     265.27k 271641
#    powershell                           x86_64             6.1.1-2.ph3              photon-updates     127.36M 133549330
#    
#    Total installed size: 227.14M 238174985
#    
#    Downloading:
#    userspace-rcu                           181074    100%
#    libunwind                                68246    100%
#    lttng-ust                               377915    100%
#    icu                                   12956251    100%
#    dotnet-runtime                        27442776    100%
#    unzip                                   131709    100%
#    powershell                            45891321    100%                  7417137     16%
#    Testing transaction
#    Running transaction
#    Installing/Updating: icu-61.1-1.ph3.x86_64
#    Installing/Updating: libunwind-1.2-2.ph3.x86_64
#    Installing/Updating: userspace-rcu-0.10.1-1.ph3.x86_64
#    Installing/Updating: lttng-ust-2.10.2-2.ph3.x86_64
#    Installing/Updating: dotnet-runtime-2.2.0-1.ph3.x86_64
#    Installing/Updating: powershell-6.1.1-2.ph3.x86_64
#    Installing/Updating: unzip-6.0-13.ph3.x86_64
#    
#    Complete!
#    root@photonos [ / ]# cd /root
#    root@photonos [ ~ ]# curl -O -J -L https://www.powershellgallery.com/api/v2/package/PackageManagement && unzip PackageManagement -d /usr/lib/powershell/Modules/PackageManagement && rm -f PackageManagement
#      % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
#                                     Dload  Upload   Total   Spent    Left  Speed
#    100   193  100   193    0     0    335      0 --:--:-- --:--:-- --:--:--   335
#    100 1031k  100 1031k    0     0  1362k      0 --:--:-- --:--:-- --:--:-- 8891k
#    Archive:  PackageManagement
#      inflating: /usr/lib/powershell/Modules/PackageManagement/_rels/.rels
#      inflating: /usr/lib/powershell/Modules/PackageManagement/PackageManagement.nuspec
#      inflating: /usr/lib/powershell/Modules/PackageManagement/PackageManagement.cat
#      inflating: /usr/lib/powershell/Modules/PackageManagement/PackageManagement.format.ps1xml
#      inflating: /usr/lib/powershell/Modules/PackageManagement/PackageManagement.psd1
#      inflating: /usr/lib/powershell/Modules/PackageManagement/PackageManagement.psm1
#      inflating: /usr/lib/powershell/Modules/PackageManagement/PackageManagement.Resources.psd1
#      inflating: /usr/lib/powershell/Modules/PackageManagement/PackageProviderFunctions.psm1
#      inflating: /usr/lib/powershell/Modules/PackageManagement/coreclr/netstandard2.0/Microsoft.PackageManagement.ArchiverProviders.dll
#      inflating: /usr/lib/powershell/Modules/PackageManagement/coreclr/netstandard2.0/Microsoft.PackageManagement.CoreProviders.dll
#      inflating: /usr/lib/powershell/Modules/PackageManagement/coreclr/netstandard2.0/Microsoft.PackageManagement.dll
#      inflating: /usr/lib/powershell/Modules/PackageManagement/coreclr/netstandard2.0/Microsoft.PackageManagement.MetaProvider.PowerShell.dll
#      inflating: /usr/lib/powershell/Modules/PackageManagement/coreclr/netstandard2.0/Microsoft.PackageManagement.NuGetProvider.dll
#      inflating: /usr/lib/powershell/Modules/PackageManagement/coreclr/netstandard2.0/Microsoft.PowerShell.PackageManagement.dll
#      inflating: /usr/lib/powershell/Modules/PackageManagement/DSCResources/PackageManagementDscUtilities.psm1
#      inflating: /usr/lib/powershell/Modules/PackageManagement/DSCResources/PackageManagementDscUtilities.strings.psd1
#      inflating: /usr/lib/powershell/Modules/PackageManagement/DSCResources/MSFT_PackageManagement/MSFT_PackageManagement.psm1
#      inflating: /usr/lib/powershell/Modules/PackageManagement/DSCResources/MSFT_PackageManagement/MSFT_PackageManagement.schema.mfl
#      inflating: /usr/lib/powershell/Modules/PackageManagement/DSCResources/MSFT_PackageManagement/MSFT_PackageManagement.schema.mof
#      inflating: /usr/lib/powershell/Modules/PackageManagement/DSCResources/MSFT_PackageManagement/MSFT_PackageManagement.strings.psd1
#      inflating: /usr/lib/powershell/Modules/PackageManagement/DSCResources/MSFT_PackageManagementSource/MSFT_PackageManagementSource.psm1
#      inflating: /usr/lib/powershell/Modules/PackageManagement/DSCResources/MSFT_PackageManagementSource/MSFT_PackageManagementSource.schema.mfl
#      inflating: /usr/lib/powershell/Modules/PackageManagement/DSCResources/MSFT_PackageManagementSource/MSFT_PackageManagementSource.schema.mof
#      inflating: /usr/lib/powershell/Modules/PackageManagement/DSCResources/MSFT_PackageManagementSource/MSFT_PackageManagementSource.strings.psd1
#      inflating: /usr/lib/powershell/Modules/PackageManagement/fullclr/Microsoft.PackageManagement.ArchiverProviders.dll
#      inflating: /usr/lib/powershell/Modules/PackageManagement/fullclr/Microsoft.PackageManagement.CoreProviders.dll
#      inflating: /usr/lib/powershell/Modules/PackageManagement/fullclr/Microsoft.PackageManagement.dll
#      inflating: /usr/lib/powershell/Modules/PackageManagement/fullclr/Microsoft.PackageManagement.MetaProvider.PowerShell.dll
#      inflating: /usr/lib/powershell/Modules/PackageManagement/fullclr/Microsoft.PackageManagement.MsiProvider.dll
#      inflating: /usr/lib/powershell/Modules/PackageManagement/fullclr/Microsoft.PackageManagement.MsuProvider.dll
#      inflating: /usr/lib/powershell/Modules/PackageManagement/fullclr/Microsoft.PackageManagement.NuGetProvider.dll
#      inflating: /usr/lib/powershell/Modules/PackageManagement/fullclr/Microsoft.PowerShell.PackageManagement.dll
#      inflating: /usr/lib/powershell/Modules/PackageManagement/[Content_Types].xml
#      inflating: /usr/lib/powershell/Modules/PackageManagement/package/services/metadata/core-properties/a7159c8d3c334695995d4d4c58a933fe.psmdcp
#    root@photonos [ ~ ]# curl -O -J -L https://www.powershellgallery.com/api/v2/package/PowerShellGet && unzip PowerShellGet-d /usr/lib/powershell/Modules/PowerShellGet && rm -f PowerShellGet
#      % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
#                                     Dload  Upload   Total   Spent    Left  Speed
#    100   189  100   189    0     0    392      0 --:--:-- --:--:-- --:--:--   392
#    100  272k  100  272k    0     0   296k      0 --:--:-- --:--:-- --:--:-- 1559k
#    Archive:  PowerShellGet
#      inflating: /usr/lib/powershell/Modules/PowerShellGet/_rels/.rels
#      inflating: /usr/lib/powershell/Modules/PowerShellGet/PowerShellGet.nuspec
#      inflating: /usr/lib/powershell/Modules/PowerShellGet/PowerShellGet.cat
#      inflating: /usr/lib/powershell/Modules/PowerShellGet/PowerShellGet.psd1
#      inflating: /usr/lib/powershell/Modules/PowerShellGet/PSGet.Format.ps1xml
#      inflating: /usr/lib/powershell/Modules/PowerShellGet/PSGet.Resource.psd1
#      inflating: /usr/lib/powershell/Modules/PowerShellGet/PSModule.psm1
#      inflating: /usr/lib/powershell/Modules/PowerShellGet/DSCResources/MSFT_PSModule/MSFT_PSModule.psm1
#      inflating: /usr/lib/powershell/Modules/PowerShellGet/DSCResources/MSFT_PSModule/MSFT_PSModule.schema.mfl
#      inflating: /usr/lib/powershell/Modules/PowerShellGet/DSCResources/MSFT_PSModule/MSFT_PSModule.schema.mof
#      inflating: /usr/lib/powershell/Modules/PowerShellGet/DSCResources/MSFT_PSModule/en-US/MSFT_PSModule.strings.psd1
#      inflating: /usr/lib/powershell/Modules/PowerShellGet/DSCResources/MSFT_PSRepository/MSFT_PSRepository.psm1
#      inflating: /usr/lib/powershell/Modules/PowerShellGet/DSCResources/MSFT_PSRepository/MSFT_PSRepository.schema.mfl
#      inflating: /usr/lib/powershell/Modules/PowerShellGet/DSCResources/MSFT_PSRepository/MSFT_PSRepository.schema.mof
#      inflating: /usr/lib/powershell/Modules/PowerShellGet/DSCResources/MSFT_PSRepository/en-US/MSFT_PSRepository.strings.psd1
#      inflating: /usr/lib/powershell/Modules/PowerShellGet/en-US/PSGet.Resource.psd1
#      inflating: /usr/lib/powershell/Modules/PowerShellGet/Modules/PowerShellGet.LocalizationHelper/PowerShellGet.LocalizationHelper.psm1
#      inflating: /usr/lib/powershell/Modules/PowerShellGet/Modules/PowerShellGet.ResourceHelper/PowerShellGet.ResourceHelper.psm1
#      inflating: /usr/lib/powershell/Modules/PowerShellGet/Modules/PowerShellGet.ResourceHelper/en-US/PowerShellGet.ResourceHelper.strings.psd1
#      inflating: /usr/lib/powershell/Modules/PowerShellGet/[Content_Types].xml
#      inflating: /usr/lib/powershell/Modules/PowerShellGet/package/services/metadata/core-properties/ac6ed28d8c464a69802b3e088b28aaab.psmdcp
#    root@photonos [ ~ ]# mkdir -p /usr/lib/powershell/ref/ && ln -s /usr/lib/powershell/*.dll /usr/lib/powershell/ref/
#    root@photonos [ ~ ]# pwsh
#    PowerShell 6.1.0-271-gc1e171622acb2917914fbc3fde69322b07863b3b
#    Copyright (c) Microsoft Corporation. All rights reserved.
#    
#    https://aka.ms/pscore6-docs
#    Type 'help' to get help.
#    
#    PS /root> get-psrepository
#    WARNING: Unable to find module repositories.
#    PS /root>
#    
#    PS /root> get-psrepository -default
#    Get-PSRepository : A parameter cannot be found that matches parameter name 'default'.
#    At line:1 char:18
#    + get-psrepository -default
#    +                  ~~~~~~~~
#    + CategoryInfo          : InvalidArgument: (:) [Get-PSRepository], ParameterBindingException
#    + FullyQualifiedErrorId : NamedParameterNotFound,Get-PSRepository
#    
#    PS /root>
#    
#    PS /root> Register-PSRepository -Name PSGallery -SourceLocation https://www.powershellgallery.com/api/v2/
#    Register-PSRepository : Use 'Register-PSRepository -Default' to register the PSGallery repository.
#    At line:1 char:1
#    + Register-PSRepository -Name PSGallery -SourceLocation https://www.pow ...
#    + ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#    + CategoryInfo          : InvalidArgument: (PSGallery:String) [Register-PSRepository], ArgumentException
#    + FullyQualifiedErrorId : UseDefaultParameterSetOnRegisterPSRepository,Register-PSRepository
#    
#    PS /root>
#    
# 4) The solution provided in https://github.com/vmware/powerclicore/blob/master/Dockerfile does not work.
#    A workaround using Mono with nuget.exe in PwshGalleryonPhotonOS.sh works.
#      Remark: It takes a huge overload of time and storage space simply to make use of the x86 commandline nuget.exe on Photon OS.
#              Simplifying the installation by making a so called mkbundled nuget.exe failed. See Findings_MkbundledNuget.txt.
#
#
# Finding #2
# 1) Vanilla VMware Photon OS 3.0 GA
# 2) Install latest Powershell Core release v7.0.0.-preview.4. See https://github.com/PowerShell/PowerShell/releases/tag/v7.0.0-preview.4
# 3) Get-PSRepository fails with
#    WARNING: Unable to find module repositories.
#
#
#    Stacktrace of 2)
#    root@photonos [ / ]# pwsh-preview
#    PowerShell 7.0.0-preview.4
#    Copyright (c) Microsoft Corporation. All rights reserved.
#    
#    https://aka.ms/powershell
#    Type 'help' to get help.
#    
#    PS /> register-psrepository -name PSGallery -SourceLocation https://www.powershellgallery.com/api/v2
#    register-psrepository : Use 'Register-PSRepository -Default' to register the PSGallery repository.
#    At line:1 char:1
#    + register-psrepository -name PSGallery -SourceLocation https://www.pow ...
#    + ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#    + CategoryInfo          : InvalidArgument: (PSGallery:String) [Register-PSRepository], ArgumentException
#    + FullyQualifiedErrorId : UseDefaultParameterSetOnRegisterPSRepository,Register-PSRepository
#    
#    PS /> register-psrepository -default
#    PS />
#    PS /> get-psrepository
#    WARNING: Unable to find module repositories.
#    PS />
# 4) See Finding 1)
#
#
# Finding #3
# 1) Vanilla VMware Photon OS 3.0 GA, run all docker inside commands as of Finding 1)
# 2) Install a custom Powershellget. See https://github.com/PowerShell/PowerShellGet/issues/350
# 3) Get-PSRepository fails with
#    WARNING: Unable to find module repositories.
# 4) It has nothing to do with the location issue described in https://github.com/PowerShell/PowerShellGet/issues/350.
#    However the source src/PowerShellGet/public/psgetfunctions/Register-PSRepository.ps1 needs that PackageManagementProvider "nuget" is recognized. On Photon OS this is not the case.
#    See https://github.com/PowerShell/PowerShellGet/pull/407
#    See https://github.com/PowerShell/PowerShellGet/issues/133
#    See https://github.com/PowerShell/PowerShellGet/issues/499. Latest issue entry was on 14th of September 2019.
#    See Finding 1)
#
#
# Finding #4
# 1) Vanilla VMware Photon OS 3.0 GA
# 2) Install latest Powershell Core release v7.0.0.-preview.5. See https://github.com/PowerShell/PowerShell/releases/tag/v7.0.0-preview.5
# 3) Get-PSRepository fails with
#    WARNING: Unable to find module repositories.
#
#
#    Stacktrace of 2)
#    PS /root> get-psrepository
#    WARNING: Unable to find module repositories.
#    PS /root> register-psrepository -default
#    
#    Suggestion [4,General]: The most similar commands are: gzexe, getent.
# 4) See Finding 1)
#
#
# Finding #5
# 1) Vanilla VMware Photon OS 3.0 GA
# 2) Install Powershell Core 6.0.5.
# 3) Get-PSRepository, find-module, install-module works.
#
#
#    Stacktrace of 2)
#    get-psrepository
#    
#    Name                      InstallationPolicy   SourceLocation
#    ----                      ------------------   --------------
#    PSGallery                 Untrusted            https://www.powershellgallery.com/api/v2
#    
#    After install-module VMware.PowerCLI:
#
#    PS /root> get-packageprovider
#    Name                     Version          DynamicOptions                                                                                                                                                                                       0----                     -------          --------------                                                                                                                                                                                       ANuGet                    2.8.5.210        Destination, ExcludeVersion, Scope, SkipDependencies, Headers, FilterOnTag, Contains, AllowPrereleaseVersions, ConfigFile, SkipValidate
#    PowerShellGet            1.6.7.0          PackageManagementProvider, Type, Scope, AllowClobber, SkipPublisherCheck, InstallUpdate, NoPathUpdate, AllowPrereleaseVersions, Filter, Tag, Includes, DscResource, RoleCapability, Command, Accep...
#    
#    PS /root> get-module -listavailable
#        Directory: /opt/microsoft/powershell/6.0.5/Modules
#    
#    
#    ModuleType Version    Name                                ExportedCommands
#    ---------- -------    ----                                ----------------
#    Manifest   1.2.2.0    Microsoft.PowerShell.Archive        {Compress-Archive, Expand-Archive}
#    Manifest   3.0.0.0    Microsoft.PowerShell.Host           {Start-Transcript, Stop-Transcript}
#    Manifest   3.1.0.0    Microsoft.PowerShell.Management     {Add-Content, Clear-Content, Clear-ItemProperty, Join-Path...}
#    Manifest   3.0.0.0    Microsoft.PowerShell.Security       {Get-Credential, Get-ExecutionPolicy, Set-ExecutionPolicy, ConvertFrom-SecureString...}
#    Manifest   3.1.0.0    Microsoft.PowerShell.Utility        {Format-List, Format-Custom, Format-Table, Format-Wide...}
#    Script     1.1.7.2    PackageManagement                   {Find-Package, Get-Package, Get-PackageProvider, Get-PackageSource...}
#    Script     1.6.7      PowerShellGet                       {Find-Command, Find-DSCResource, Find-Module, Find-RoleCapability...}
#    Script     0.0        PSDesiredStateConfiguration         {Get-PSMetaConfigDocumentInstVersionInfo, Write-Log, IsPatternMatched, GetImplementingModulePath...}
#    Script     1.2        PSReadLine                          {Get-PSReadlineKeyHandler, Set-PSReadlineKeyHandler, Remove-PSReadlineKeyHandler, Get-PSReadlineOption...}
#     
#    
# 4) 6.0.5 is end-of-life according 
#
#
# Finding #6
# 1) Vanilla VMware Photon OS 3.0 GA
# 2) Install Powershell Core. Download https://github.com/PowerShell/PowerShell/releases/download/v6.2.3/powershell-6.2.3-linux-x64.tar.gz
# 3) Get-PSRepository fails with
#    WARNING: Unable to find module repositories.
#
#
#    Stacktrace of 2)
#    PS /tmp> get-packageprovider
#    
#    Name                     Version          DynamicOptions
#    ----                     -------          --------------
#    NuGet                    3.0.0.1          Destination, ExcludeVersion, Scope, SkipDependencies, Headers, FilterOnTag, Contains, AllowPrereleaseVersions, ConfigFile, SkipValidate
#    PowerShellGet            2.1.3.0          PackageManagementProvider, Type, Scope, AllowClobber, SkipPublisherCheck, InstallUpdate, NoPathUpdate, AllowPrereleaseVersions, Filter, Tag, Includes, DscResource, RoleCapability, Command, AcceptL…
#    
#    
#    PS /tmp> get-module -listavailable
#    
#    
#        Directory: /opt/microsoft/powershell/6.2.3/Modules
#    
#    ModuleType Version    Name                                PSEdition ExportedCommands
#    ---------- -------    ----                                --------- ----------------
#    Manifest   1.2.3.0    Microsoft.PowerShell.Archive        Desk      {Compress-Archive, Expand-Archive}
#    Manifest   6.1.0.0    Microsoft.PowerShell.Host           Core      {Start-Transcript, Stop-Transcript}
#    Manifest   6.1.0.0    Microsoft.PowerShell.Management     Core      {Add-Content, Clear-Content, Clear-ItemProperty, Join-Path…}
#    Manifest   6.1.0.0    Microsoft.PowerShell.Security       Core      {Get-Credential, Get-ExecutionPolicy, Set-ExecutionPolicy, ConvertFrom-SecureString…}
#    Manifest   6.1.0.0    Microsoft.PowerShell.Utility        Core      {Export-Alias, Get-Alias, Import-Alias, New-Alias…}
#    Script     1.3.2      PackageManagement                   Desk      {Find-Package, Get-Package, Get-PackageProvider, Get-PackageSource…}
#    Script     2.1.3      PowerShellGet                       Desk      {Find-Command, Find-DSCResource, Find-Module, Find-RoleCapability…}
#    Script     0.0        PSDesiredStateConfiguration         Desk      {Get-MofInstanceName, GetCompositeResource, CheckResourceFound, ThrowError…}
#    Script     2.0.0      PSReadLine                          Desk      {Get-PSReadLineKeyHandler, Set-PSReadLineKeyHandler, Remove-PSReadLineKeyHandler, Get-PSReadLineOption…}
#    Binary     1.1.2      ThreadJob                           Desk      Start-ThreadJob
#    
#    PS /tmp>
# 4) See Finding 1)
#
#